import pandas as pd 
import numpy as np
import os
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report

# replace with your folder's path
folder_path = os.getcwd()

all_files = os.listdir(folder_path)

# Filter out non-CSV files
csv_files = [f for f in all_files if f.endswith('.csv') and f != "combined_file.csv" and f != "2024Combine.csv"]

# Create a list to hold the dataframes
df_list = []

for csv in csv_files:
    file_path = os.path.join(folder_path, csv)
    try:
        # Try reading the file using default UTF-8 encoding
        df = pd.read_csv(file_path)
        df_list.append(df)
    except UnicodeDecodeError:
        try:
            # If UTF-8 fails, try reading the file using UTF-16 encoding with tab separator
            df = pd.read_csv(file_path, sep='\t', encoding='utf-16')
            df_list.append(df)
        except Exception as e:
            print(f"Could not read file {csv} because of error: {e}")
    except Exception as e:
        print(f"Could not read file {csv} because of error: {e}")

# Concatenate all data into one DataFrame
combdata = pd.concat(df_list, ignore_index=True)

# Save the final result to a new CSV file
combdata.to_csv(os.path.join(folder_path, 'combined_file.csv'), index=False)

#df = pd.DataFrame(combdata)

dfqb = combdata[combdata['Pos'] == 'QB'].reset_index(drop=True)

print(dfqb.head())

proQB = ["Patrick Mahomes", "Deshaun Watson", "Baker Mayfield", "Josh Allen", "Lamar Jackson", "Kyler Murray", "Joe Burrow", "Tua Tagovailoa", "Justin Herbert", "Jordan Love", "Jalen Hurts", "Trevor Lawrence","Brock Purdy", "C.J. Stroud", "Anthony Richardson"]
proWR = []
row_list= []

dfProQB = pd.DataFrame(columns=dfqb.columns)

for QB in proQB:
# Iterate through each row of the original DataFrame
    row_index = dfqb[dfqb["Player"] == QB].index[0]

    row_list.append(row_index)

dfProQB = dfqb.iloc[row_list]

print(dfProQB)